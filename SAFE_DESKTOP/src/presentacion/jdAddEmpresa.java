//Paquete
package presentacion;

//Importaciones
import com.sun.glass.events.KeyEvent;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.event.ItemEvent;
import java.beans.PropertyChangeEvent;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import modelo.Cliente;
import modelo.Comuna;
import modelo.Contrato;
import modelo.Empresa;
import modelo.Region;
import negocio.NegCliente;
import negocio.NegComuna;
import negocio.NegContrato;
import negocio.NegEmpresa;
import negocio.NegRegion;
import presentacion.validaciones.jTextFieldCharLimits;
import presentacion.validaciones.validadorRunChileno;

/**
 * @author Ignacio Antilanca
 * @version 1.3
 */
public class jdAddEmpresa extends javax.swing.JDialog {

    /**
     * Variables utilizadas.
     */
    List<Comuna> listComuna;
    List<Region> listRegion;
    List<Cliente> listCliente;

    /**
     * Constructor que inicializa la ventana de ingreso de empresa.
     *
     * @param parent ventana jfPrincipal.
     * @param modal
     */
    public jdAddEmpresa(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.setUndecorated(true);
        initComponents();
        limits();
        //Se agrega listener para que cambie la fecha de termino automaticamente
        //al elegir una fecha de inicio y se cumpla el contrato anual.
        this.dpFechaInicio.getDateEditor().addPropertyChangeListener((PropertyChangeEvent e) -> {
            if (this.dpFechaInicio.getDate() == null) {
            } else {
                Date fecha = this.dpFechaInicio.getDate();
                int dias = 365;
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(fecha);
                calendar.add(Calendar.DAY_OF_YEAR, dias);
                dpFechaTermino.setDate(calendar.getTime());
            }
        });
        int ancho = java.awt.Toolkit.getDefaultToolkit().getScreenSize().width;
        int alto = java.awt.Toolkit.getDefaultToolkit().getScreenSize().height;
        this.setBounds((ancho / 2) - (this.getWidth() / 2), (alto / 2) - (this.getHeight() / 2), 800, 600);
        this.setLocationRelativeTo(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAddEmpresa = new javax.swing.JPanel();
        pnlAddEmpresaBanner = new javax.swing.JPanel();
        lblTituloEmpresa = new javax.swing.JLabel();
        jpAddContrato = new javax.swing.JPanel();
        lblFechaInicio = new javax.swing.JLabel();
        lblFechaTermino = new javax.swing.JLabel();
        dpFechaInicio = new com.toedter.calendar.JDateChooser();
        dpFechaTermino = new com.toedter.calendar.JDateChooser();
        jpAddEmpresa = new javax.swing.JPanel();
        lblRut = new javax.swing.JLabel();
        txtRut = new javax.swing.JTextField();
        lblNombFantasia = new javax.swing.JLabel();
        txtNombreFantasia = new javax.swing.JTextField();
        lblCliente = new javax.swing.JLabel();
        ddlCliente = new javax.swing.JComboBox<>();
        lblRegion = new javax.swing.JLabel();
        ddlRegion = new javax.swing.JComboBox<>();
        lblComuna = new javax.swing.JLabel();
        ddlComuna = new javax.swing.JComboBox<>();
        btnAgregarEmpresa = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlAddEmpresa.setBackground(new java.awt.Color(255, 255, 255));
        pnlAddEmpresa.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        pnlAddEmpresaBanner.setBackground(new java.awt.Color(17, 48, 142));

        lblTituloEmpresa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTituloEmpresa.setForeground(new java.awt.Color(255, 255, 255));
        lblTituloEmpresa.setText("INGRESO DE NUEVA EMPRESA");

        javax.swing.GroupLayout pnlAddEmpresaBannerLayout = new javax.swing.GroupLayout(pnlAddEmpresaBanner);
        pnlAddEmpresaBanner.setLayout(pnlAddEmpresaBannerLayout);
        pnlAddEmpresaBannerLayout.setHorizontalGroup(
            pnlAddEmpresaBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddEmpresaBannerLayout.createSequentialGroup()
                .addContainerGap(279, Short.MAX_VALUE)
                .addComponent(lblTituloEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(270, 270, 270))
        );
        pnlAddEmpresaBannerLayout.setVerticalGroup(
            pnlAddEmpresaBannerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddEmpresaBannerLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(lblTituloEmpresa)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        jpAddContrato.setBackground(new java.awt.Color(255, 255, 255));
        jpAddContrato.setBorder(javax.swing.BorderFactory.createTitledBorder("Información de Contrato"));

        lblFechaInicio.setText("Fecha de Inicio");

        lblFechaTermino.setText("Fecha de Termino");

        javax.swing.GroupLayout jpAddContratoLayout = new javax.swing.GroupLayout(jpAddContrato);
        jpAddContrato.setLayout(jpAddContratoLayout);
        jpAddContratoLayout.setHorizontalGroup(
            jpAddContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAddContratoLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(lblFechaInicio)
                .addGap(84, 84, 84)
                .addComponent(dpFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(lblFechaTermino)
                .addGap(18, 18, 18)
                .addComponent(dpFechaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpAddContratoLayout.setVerticalGroup(
            jpAddContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAddContratoLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jpAddContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dpFechaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dpFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFechaTermino)
                    .addComponent(lblFechaInicio))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jpAddEmpresa.setBackground(new java.awt.Color(255, 255, 255));
        jpAddEmpresa.setBorder(javax.swing.BorderFactory.createTitledBorder("Información de Empresa"));

        lblRut.setText("Rut");

        txtRut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRutKeyTyped(evt);
            }
        });

        lblNombFantasia.setText("Nombre fantasía");

        txtNombreFantasia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreFantasiaKeyTyped(evt);
            }
        });

        lblCliente.setText("Cliente");

        lblRegion.setText("Region");

        ddlRegion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ddlRegionItemStateChanged(evt);
            }
        });

        lblComuna.setText("Comuna");

        javax.swing.GroupLayout jpAddEmpresaLayout = new javax.swing.GroupLayout(jpAddEmpresa);
        jpAddEmpresa.setLayout(jpAddEmpresaLayout);
        jpAddEmpresaLayout.setHorizontalGroup(
            jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAddEmpresaLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblRut)
                    .addComponent(lblNombFantasia)
                    .addComponent(lblCliente))
                .addGap(76, 76, 76)
                .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAddEmpresaLayout.createSequentialGroup()
                        .addComponent(ddlCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpAddEmpresaLayout.createSequentialGroup()
                        .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtNombreFantasia)
                            .addComponent(txtRut, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblRegion)
                            .addComponent(lblComuna))
                        .addGap(44, 44, 44)
                        .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ddlRegion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ddlComuna, 0, 119, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jpAddEmpresaLayout.setVerticalGroup(
            jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAddEmpresaLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRut)
                    .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblRegion)
                    .addComponent(ddlRegion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpAddEmpresaLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblComuna)
                            .addComponent(ddlComuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpAddEmpresaLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNombreFantasia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNombFantasia))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCliente)
                    .addComponent(ddlCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        btnAgregarEmpresa.setText("AGREGAR");
        btnAgregarEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEmpresaActionPerformed(evt);
            }
        });

        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAddEmpresaLayout = new javax.swing.GroupLayout(pnlAddEmpresa);
        pnlAddEmpresa.setLayout(pnlAddEmpresaLayout);
        pnlAddEmpresaLayout.setHorizontalGroup(
            pnlAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAddEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpAddEmpresa, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpAddContrato, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlAddEmpresaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pnlAddEmpresaBanner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(185, 185, 185))
            .addGroup(pnlAddEmpresaLayout.createSequentialGroup()
                .addGap(257, 257, 257)
                .addComponent(btnAgregarEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAddEmpresaLayout.setVerticalGroup(
            pnlAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAddEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlAddEmpresaBanner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jpAddContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpAddEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlAddEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarEmpresa)
                    .addComponent(btnCancelar))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAddEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAddEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método que recibe la informacion ingresada en el formulario de registro
     * de empresa y la envia al controlador.
     *
     * @param evt evento que indica que se realizo una accion definida
     * (ActionEvent)
     */
    private void btnAgregarEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEmpresaActionPerformed

        if (!validateEmptys()) {
            if (validateDuplicateEmpresa()) {
                try {
                    Contrato c = new Contrato();
                    c.setFechaInicio(this.dpFechaInicio.getDate());
                    c.setFechaTermino(this.dpFechaTermino.getDate());
                    NegContrato contrato = new NegContrato();
                    contrato.addContrato(c);

                    Empresa e = new Empresa();
                    Comuna com = new Comuna();
                    Cliente cli = new Cliente();
                    if (new validadorRunChileno(this.txtRut.getText()).validateRun() == true) {
                        e.setRut(this.txtRut.getText());
                        e.setNombreFantasia(this.txtNombreFantasia.getText());
                        e.setEstado('1');
                        e.setCliente(cli);
                        cli = (Cliente) this.ddlCliente.getModel().getSelectedItem();
                        e.getCliente().setIdCliente(cli.getIdCliente());
                        e.setComuna(com);
                        com = (Comuna) this.ddlComuna.getModel().getSelectedItem();
                        e.getComuna().setIdComuna(com.getIdComuna());
                        NegEmpresa negE = new NegEmpresa();
                        negE.addEmpresa(e);

                        JOptionPane.showMessageDialog(rootPane, "Empresa ingresada correctamente");
                        this.dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, "El RUT ingresado es invalido", "", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Ha ocurrido un error inesperado" + ex.toString());
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios", "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAgregarEmpresaActionPerformed

    /**
     * Método que valida que los campos del formulario de registro de empresa no
     * se encuentren vacios.
     *
     * @return campo true/false.
     */
    private boolean validateEmptys() {
        boolean campo = this.dpFechaInicio.getDate() == null;
        campo |= this.dpFechaTermino.getDate() == null;
        campo |= this.txtRut.getText().isEmpty();
        campo |= this.txtNombreFantasia.getText().isEmpty();
        campo |= this.ddlCliente.getSelectedIndex() == 0;
        campo |= this.ddlRegion.getSelectedIndex() == 0;
        campo |= this.ddlComuna.getSelectedIndex() == 0;
        return campo;
    }

    /**
     * Método que establece los limites de caracteres por campo de texto en el
     * formulario de registro de empresa.
     *
     */
    public void limits() {
        Date fechaInicio = new Date();
        this.dpFechaInicio.setMinSelectableDate(fechaInicio);

        this.txtRut.setDocument(new jTextFieldCharLimits(9));
        this.txtNombreFantasia.setDocument(new jTextFieldCharLimits(30));
        this.dpFechaTermino.setEnabled(false);

        JTextFieldDateEditor editor = (JTextFieldDateEditor) this.dpFechaInicio.getDateEditor();
        JTextFieldDateEditor editor2 = (JTextFieldDateEditor) this.dpFechaTermino.getDateEditor();
        editor.setEditable(false);
        editor2.setEditable(false);
    }

    /**
     * Evento que cierra la ventana de ingreso de empresa (Cancelar)
     *
     * @param evt evento que indica que se realizo una accion definida
     * (ActionEvent)
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * Evento que carga al momento de abrir la ventana y permite la carga de los
     * combobox a utilizar (Clientes, Regiones, Comúnas).
     *
     * @param evt evento que indica que se realizo una accion definida
     * (WindowEvent)
     */
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        NegRegion negR = new NegRegion();
        NegComuna negC = new NegComuna();
        NegCliente negCl = new NegCliente();

        DefaultComboBoxModel cModelR = (DefaultComboBoxModel) this.ddlRegion.getModel();

        cModelR.removeAllElements();
        this.ddlComuna.removeAllItems();
        this.ddlCliente.removeAllItems();

        cModelR.addElement("Región...");
        this.ddlComuna.addItem("Comuna...");
        this.ddlCliente.addItem("Cliente...");
        try {
            listRegion = negR.getAllRegion();
            listComuna = negC.getAllComuna();
            listCliente = negCl.getAllCliente();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Error inesperado (combobox)");
        }

        for (Region r : listRegion) {
            cModelR.addElement(r.getNombre());
        }

        for (Comuna c : listComuna) {
            Comuna cm = new Comuna();
            cm.setNombre(c.getNombre());
            cm.setIdComuna(c.getIdComuna());
            this.ddlComuna.addItem(cm);
        }

        for (Cliente c : listCliente) {
            Cliente cl = new Cliente();
            cl.setIdCliente(c.getIdCliente());
            cl.setPersona(c.getPersona());
            this.ddlCliente.addItem(cl);
        }
    }//GEN-LAST:event_formWindowOpened

    /**
     * Evento que realiza la recargar del combobox de comuna, dependiente la
     * region selecionada.
     *
     * @param evt evento que indica que se realizo una accion definida
     * (ItemEvent)
     */
    private void ddlRegionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ddlRegionItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (this.ddlRegion.getSelectedIndex() > 0) {
                NegComuna negC = new NegComuna();

                this.ddlComuna.removeAllItems();
                this.ddlComuna.addItem("Comuna...");
                try {
                    listComuna = negC.getAllComuna();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, "Error con la actualizacion de comunas.");
                }
                for (Comuna c : listComuna) {
                    if (c.getRegion().getIdRegion() == this.ddlRegion.getSelectedIndex()) {
                        Comuna cm = new Comuna();
                        cm.setNombre(c.getNombre());
                        cm.setIdComuna(c.getIdComuna());
                        this.ddlComuna.addItem(cm);
                    }
                }
            }
        }
    }//GEN-LAST:event_ddlRegionItemStateChanged

    /**
     * Método que verifica que el RUT ingresado no se encuentre ya registrado.
     *
     * @return true si esta disponible, de lo contrario false.
     */
    private boolean validateDuplicateEmpresa(){
       String runEmp = this.txtRut.getText();
       NegEmpresa emp = new NegEmpresa();
        if (emp.validateDuplicateRut(runEmp) != null) {
            JOptionPane.showMessageDialog(null, "Ya existe registrado ese RUN de Empresa, ingrese otro...", "", JOptionPane.ERROR_MESSAGE);
            return false;
        }else{
            return true;
        }
    }
    /**
     * Evento que evita escribir caracteres diferentes a números, en el campo de
     * RUT.
     *
     * @param evt evento que indica que se realizo una accion definida
     * (KeyEvent)
     */
    private void txtRutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACKSPACE) || (int) c == 75 || (int) c == 107)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtRutKeyTyped

    /**
     * Evento que impde escribir caracters o numeros en el campo de nombre de
     * fantasia de la empresa.
     *
     * @param evt evento que indica que se realizo una accion definida
     * (KeyEvent)
     */
    private void txtNombreFantasiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreFantasiaKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isLetter(c) || c == KeyEvent.VK_SPACE)) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombreFantasiaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarEmpresa;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JComboBox<Object> ddlCliente;
    private javax.swing.JComboBox<Object> ddlComuna;
    private javax.swing.JComboBox<String> ddlRegion;
    private com.toedter.calendar.JDateChooser dpFechaInicio;
    private com.toedter.calendar.JDateChooser dpFechaTermino;
    private javax.swing.JPanel jpAddContrato;
    private javax.swing.JPanel jpAddEmpresa;
    private javax.swing.JLabel lblCliente;
    private javax.swing.JLabel lblComuna;
    private javax.swing.JLabel lblFechaInicio;
    private javax.swing.JLabel lblFechaTermino;
    private javax.swing.JLabel lblNombFantasia;
    private javax.swing.JLabel lblRegion;
    private javax.swing.JLabel lblRut;
    private javax.swing.JLabel lblTituloEmpresa;
    private javax.swing.JPanel pnlAddEmpresa;
    private javax.swing.JPanel pnlAddEmpresaBanner;
    private javax.swing.JTextField txtNombreFantasia;
    private javax.swing.JTextField txtRut;
    // End of variables declaration//GEN-END:variables
}
